// Generated by CoffeeScript 1.3.1
(function() {
  var app, assets, db, express, mongo, mongoskin, news, params, printNews, qs;

  express = require('express');

  params = require('express-params');

  mongo = require('mongodb');

  assets = require('connect-assets');

  mongoskin = require('mongoskin');

  qs = require('querystring');

  db = mongoskin.db(process.env.MONGODB_URL || 'localhost:27017/zxg');

  news = db.collection('news');

  app = express.createServer();

  params.extend(app);

  app.set('view engine', 'eco');

  app = express.createServer();

  app.use(assets());

  app.use(express["static"](__dirname + '/public'));

  app.use(express.bodyParser());

  'news.find().toArray (err, news) ->\n  console.log \'news\',news\n		(Number) \'1\'\n		';


  printNews = function(where, pageNumber, nPerPage) {
    var skip_num;
    console.log("Page is: " + pageNumber);
    skip_num = (pageNumber - 1) * nPerPage;
    return news.find(where).skip(skip_num).limit(nPerPage);
  };

  app.get('/', function(req, res) {
    return res.render('index');
  });

  app.get('/test/insert_data', function(req, res) {
    var insert_res, _i, _results;
    news.drop();
    insert_res = [];
    (function() {
      _results = [];
      for (_i = 1; _i <= 30; _i++){ _results.push(_i); }
      return _results;
    }).apply(this).map(function(i) {
      var type;
      console.log('i', i);
      type = 'gakaki';
      if (i > 3) {
        type = 'mary';
      }
      if (i > 7) {
        type = 'guy';
      }
      return insert_res.push(news.insert({
        title: "title" + i,
        type: type
      }));
    });
    return res.send(insert_res);
  });

  app.get('/news/list/:page/:type', function(req, res) {
    var cursor, page_num, where;
    console.log('req.params', req.params);
    console.log('page', req.params.page);
    console.log('type', req.params.type);
    page_num = Number(req.params.page);
    where = {
      type: req.params.type
    };
    if (req.params.type === 'all') {
      where = null;
    }
    console.log('where', where);
    cursor = printNews(where, page_num, 10);
    return cursor.toArray(function(err, news) {
      console.log('news', news);
      return res.send(JSON.stringify(news));
    });
  });

  app.post('/news/list', function(req, res) {
    var cursor, page_num, type, where;
    console.log('req.body', req.body);
    type = req.body.type;
    page_num = Number(req.body.page);
    where = {
      type: type
    };
    if (!type) {
      where = null;
    }
    if (!page_num) {
      page_num = 1;
    }
    console.log('where', where);
    cursor = printNews(where, page_num, 10);
    return cursor.toArray(function(err, news) {
      console.log('news', news);
      return res.send(JSON.stringify(news));
    });
  });

  app.get('/', function(request, response) {
    return response.render('index');
  });

  app.get('/product/add', function(request, response) {
    var _this = this;
    if (request.param('brand')) {
      return db.product.find({
        "brand": request.param('brand')
      }).toArray(function(err, products) {
        return response.render('product/add', {
          products: products
        });
      });
    } else {
      return db.product.find().toArray(function(err, products) {
        return response.render('product/add', {
          products: products
        });
      });
    }
  });

  app.listen(3000);

}).call(this);
